<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/JNTool.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/JNTool</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
            
			
			<NodeRef refid="2"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JNTool/jn_createPropertyCodeWithDict:</TokenIdentifier>
			<Abstract type="html">动态生成字典的模型，从服务器获取json数据时需要定义大量的属性字段，用这个方法直接生成，在打印区复制粘贴</Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
			
			<Declaration>+ (void)jn_createPropertyCodeWithDict:(NSDictionary *)dict</Declaration>
			<Parameters>
				<Parameter>
					<Name>dict</Name>
					<Abstract type="html">需要生成模型的字典</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/jn_createPropertyCodeWithDict:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JNTool/jn_randomNumberWithMax:min:</TokenIdentifier>
			<Abstract type="html">产生一个随机数</Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
			
			<Declaration>+ (NSInteger)jn_randomNumberWithMax:(NSInteger)max min:(NSInteger)min</Declaration>
			<Parameters>
				<Parameter>
					<Name>max</Name>
					<Abstract type="html">随机数最大值</Abstract>
				</Parameter><Parameter>
					<Name>min</Name>
					<Abstract type="html">随机数最小值</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">min - max 之间的随机数</Abstract></ReturnValue>
			<Anchor>//api/name/jn_randomNumberWithMax:min:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JNTool/jn_textIsSpace:</TokenIdentifier>
			<Abstract type="html">判断一段字符串是否为空字符串</Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
			
			<Declaration>+ (BOOL)jn_textIsSpace:(NSString *)text</Declaration>
			<Parameters>
				<Parameter>
					<Name>text</Name>
					<Abstract type="html">需要判断的字符串</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">返回字符串是否为空字符串</Abstract></ReturnValue>
			<Anchor>//api/name/jn_textIsSpace:</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JNTool/jn_getCacheSize</TokenIdentifier>
			<Abstract type="html">获取缓存大小</Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
			
			<Declaration>+ (NSString *)jn_getCacheSize</Declaration>
			
			<ReturnValue><Abstract type="html">返回缓存大小</Abstract></ReturnValue>
			<Anchor>//api/name/jn_getCacheSize</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JNTool/jn_cleanCache</TokenIdentifier>
			<Abstract type="html">清空缓存并返回清空缓存后的文件夹大小用来更新显示</Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
			
			<Declaration>+ (NSString *)jn_cleanCache</Declaration>
			
			<ReturnValue><Abstract type="html">返回清空缓存后的文件夹大小用来更新显示</Abstract></ReturnValue>
			<Anchor>//api/name/jn_cleanCache</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/JNTool/jn_isNewVersion</TokenIdentifier>
			<Abstract type="html">App是否为新版本</Abstract>
			<DeclaredIn>JNTool.h</DeclaredIn>
			
			<Declaration>+ (BOOL)jn_isNewVersion</Declaration>
			
			<ReturnValue><Abstract type="html">返回是否是新版本</Abstract></ReturnValue>
			<Anchor>//api/name/jn_isNewVersion</Anchor>
            <NodeRef refid="2"/>
		</Token>
		
        
        
	</File>
</Tokens>